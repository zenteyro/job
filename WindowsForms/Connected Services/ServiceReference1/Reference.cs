//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsForms.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class Session : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WindowsForms.ServiceReference1.Client ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan SessionDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SessionEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SessionStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsForms.ServiceReference1.Client Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan SessionDuration {
            get {
                return this.SessionDurationField;
            }
            set {
                if ((this.SessionDurationField.Equals(value) != true)) {
                    this.SessionDurationField = value;
                    this.RaisePropertyChanged("SessionDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SessionEnd {
            get {
                return this.SessionEndField;
            }
            set {
                if ((this.SessionEndField.Equals(value) != true)) {
                    this.SessionEndField = value;
                    this.RaisePropertyChanged("SessionEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SessionStart {
            get {
                return this.SessionStartField;
            }
            set {
                if ((this.SessionStartField.Equals(value) != true)) {
                    this.SessionStartField = value;
                    this.RaisePropertyChanged("SessionStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WindowsForms.ServiceReference1.CompositeType GetDataUsingDataContract(WindowsForms.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WindowsForms.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WindowsForms.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllClients", ReplyAction="http://tempuri.org/IService1/GetAllClientsResponse")]
        WindowsForms.ServiceReference1.Client[] GetAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllClients", ReplyAction="http://tempuri.org/IService1/GetAllClientsResponse")]
        System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Client[]> GetAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClientById", ReplyAction="http://tempuri.org/IService1/GetClientByIdResponse")]
        WindowsForms.ServiceReference1.Client GetClientById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClientById", ReplyAction="http://tempuri.org/IService1/GetClientByIdResponse")]
        System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Client> GetClientByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClientByLogin", ReplyAction="http://tempuri.org/IService1/GetClientByLoginResponse")]
        WindowsForms.ServiceReference1.Client GetClientByLogin(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClientByLogin", ReplyAction="http://tempuri.org/IService1/GetClientByLoginResponse")]
        System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Client> GetClientByLoginAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertClient", ReplyAction="http://tempuri.org/IService1/InsertClientResponse")]
        bool InsertClient(WindowsForms.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertClient", ReplyAction="http://tempuri.org/IService1/InsertClientResponse")]
        System.Threading.Tasks.Task<bool> InsertClientAsync(WindowsForms.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertSession", ReplyAction="http://tempuri.org/IService1/InsertSessionResponse")]
        bool InsertSession(WindowsForms.ServiceReference1.Session session, WindowsForms.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertSession", ReplyAction="http://tempuri.org/IService1/InsertSessionResponse")]
        System.Threading.Tasks.Task<bool> InsertSessionAsync(WindowsForms.ServiceReference1.Session session, WindowsForms.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSessions", ReplyAction="http://tempuri.org/IService1/GetAllSessionsResponse")]
        WindowsForms.ServiceReference1.Session[] GetAllSessions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSessions", ReplyAction="http://tempuri.org/IService1/GetAllSessionsResponse")]
        System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Session[]> GetAllSessionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSessionsByClientId", ReplyAction="http://tempuri.org/IService1/GetSessionsByClientIdResponse")]
        WindowsForms.ServiceReference1.Session[] GetSessionsByClientId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSessionsByClientId", ReplyAction="http://tempuri.org/IService1/GetSessionsByClientIdResponse")]
        System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Session[]> GetSessionsByClientIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClientSessionsByPeriod", ReplyAction="http://tempuri.org/IService1/GetClientSessionsByPeriodResponse")]
        WindowsForms.ServiceReference1.Session[] GetClientSessionsByPeriod(int clientId, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClientSessionsByPeriod", ReplyAction="http://tempuri.org/IService1/GetClientSessionsByPeriodResponse")]
        System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Session[]> GetClientSessionsByPeriodAsync(int clientId, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClient", ReplyAction="http://tempuri.org/IService1/UpdateClientResponse")]
        bool UpdateClient(WindowsForms.ServiceReference1.Client editedClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClient", ReplyAction="http://tempuri.org/IService1/UpdateClientResponse")]
        System.Threading.Tasks.Task<bool> UpdateClientAsync(WindowsForms.ServiceReference1.Client editedClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClient", ReplyAction="http://tempuri.org/IService1/DeleteClientResponse")]
        bool DeleteClient(WindowsForms.ServiceReference1.Client deletedClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClient", ReplyAction="http://tempuri.org/IService1/DeleteClientResponse")]
        System.Threading.Tasks.Task<bool> DeleteClientAsync(WindowsForms.ServiceReference1.Client deletedClient);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsForms.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsForms.ServiceReference1.IService1>, WindowsForms.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WindowsForms.ServiceReference1.CompositeType GetDataUsingDataContract(WindowsForms.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WindowsForms.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WindowsForms.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public WindowsForms.ServiceReference1.Client[] GetAllClients() {
            return base.Channel.GetAllClients();
        }
        
        public System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Client[]> GetAllClientsAsync() {
            return base.Channel.GetAllClientsAsync();
        }
        
        public WindowsForms.ServiceReference1.Client GetClientById(int id) {
            return base.Channel.GetClientById(id);
        }
        
        public System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Client> GetClientByIdAsync(int id) {
            return base.Channel.GetClientByIdAsync(id);
        }
        
        public WindowsForms.ServiceReference1.Client GetClientByLogin(string login) {
            return base.Channel.GetClientByLogin(login);
        }
        
        public System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Client> GetClientByLoginAsync(string login) {
            return base.Channel.GetClientByLoginAsync(login);
        }
        
        public bool InsertClient(WindowsForms.ServiceReference1.Client client) {
            return base.Channel.InsertClient(client);
        }
        
        public System.Threading.Tasks.Task<bool> InsertClientAsync(WindowsForms.ServiceReference1.Client client) {
            return base.Channel.InsertClientAsync(client);
        }
        
        public bool InsertSession(WindowsForms.ServiceReference1.Session session, WindowsForms.ServiceReference1.Client client) {
            return base.Channel.InsertSession(session, client);
        }
        
        public System.Threading.Tasks.Task<bool> InsertSessionAsync(WindowsForms.ServiceReference1.Session session, WindowsForms.ServiceReference1.Client client) {
            return base.Channel.InsertSessionAsync(session, client);
        }
        
        public WindowsForms.ServiceReference1.Session[] GetAllSessions() {
            return base.Channel.GetAllSessions();
        }
        
        public System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Session[]> GetAllSessionsAsync() {
            return base.Channel.GetAllSessionsAsync();
        }
        
        public WindowsForms.ServiceReference1.Session[] GetSessionsByClientId(int id) {
            return base.Channel.GetSessionsByClientId(id);
        }
        
        public System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Session[]> GetSessionsByClientIdAsync(int id) {
            return base.Channel.GetSessionsByClientIdAsync(id);
        }
        
        public WindowsForms.ServiceReference1.Session[] GetClientSessionsByPeriod(int clientId, System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientSessionsByPeriod(clientId, start, end);
        }
        
        public System.Threading.Tasks.Task<WindowsForms.ServiceReference1.Session[]> GetClientSessionsByPeriodAsync(int clientId, System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientSessionsByPeriodAsync(clientId, start, end);
        }
        
        public bool UpdateClient(WindowsForms.ServiceReference1.Client editedClient) {
            return base.Channel.UpdateClient(editedClient);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateClientAsync(WindowsForms.ServiceReference1.Client editedClient) {
            return base.Channel.UpdateClientAsync(editedClient);
        }
        
        public bool DeleteClient(WindowsForms.ServiceReference1.Client deletedClient) {
            return base.Channel.DeleteClient(deletedClient);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClientAsync(WindowsForms.ServiceReference1.Client deletedClient) {
            return base.Channel.DeleteClientAsync(deletedClient);
        }
    }
}
